ORG 0x090
COUNTER: WORD 0x766
INDEX: WORD 0x090
START: CLA
WHILE: LOOP COUNTER
JUMP FUNC_START
JUMP FINAL
FUNC_START: LD (INDEX)+
BEQ WHILE
PUSH 
CALL FUNC_SPLIT_NUM
JUMP WHILE
FINAL: HLT

ORG 0x100
ONE: WORD 0x000F
TWO: WORD 0x00F0
THREE: WORD 0x0F00
FOUR: WORD 0xF000
ACCUM: WORD 0x0000

FUNC_SPLIT_NUM: ST ACCUM
LD ACCUM
AND FOUR
SWAB
ASR
ASR
ASR
ASR
PUSH
CALL FUNC_OUTPUT
POP

LD ACCUM
AND THREE
SWAB
PUSH
CALL FUNC_OUTPUT
POP

LD ACCUM
AND TWO
ASR
ASR
ASR
ASR
PUSH
CALL FUNC_OUTPUT
POP

LD ACCUM
AND ONE
PUSH
CALL FUNC_OUTPUT
POP

LD ENTER
CALL FUNC_ENTER

RET

ORG 0x130
SYMBOL: WORD 0x0000
FUNC_OUTPUT: CLA
IN 0xD
AND #0x40
BEQ FUNC_OUTPUT
LD (SP+1)
ADD STORAGE
ST SYMBOL
LD (SYMBOL)
OUT 0xC
RET

ORG 0x140
FUNC_ENTER: CLA
IN 0xD
AND #0x40
BEQ FUNC_OUTPUT
ST ENTER
OUT 0xC
RET

ORG 0x14F
STORAGE:  WORD 0x150
WORD 0x30
WORD 0x31
WORD 0x32
WORD 0x33
WORD 0x34
WORD 0x35
WORD 0x36
WORD 0x37
WORD 0x38
WORD 0x39
WORD 0x41
WORD 0x42
WORD 0x43
WORD 0x44
WORD 0x45
WORD 0x46
ENTER: WORD 0x40